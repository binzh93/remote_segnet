# -*- coding: utf8 -*-
import tensorflow as tf
import os
import numpy as np
from segnet import SegNet
from datamake import write_tiff, writeTiff

import gdal


def local_run():
    os.chdir('')  # 将其设置为当前工作目录   (仅需设置这个目录即可)
    train_tf_path = 'train.tfrecords'
    test_tf_path = 'test.tfrecords'
    model_save_path = 'model/model.ckpt'
    predict_result_path = 'prediction_result.tif'

    net = SegNet(100, 0.0015, 0.99, 0.9999)
    # operation 1: train
    train_batch_size = 1
    net.train(train_batch_size, train_tf_path, model_save_path)

    # operation 2: prediction
    test_batch_size = 1
    net.prediction_local_run(test_batch_size, model_save_path, test_tf_path, predict_result_path)


# run on pai
def operation_on_pai_generate_txt():
    train_tf_path = 'oss://remotecom/ ... /train.tfrecords'
    test_tf_path = 'oss://remotecom/ ... /test.tfrecords'
    model_save_path = 'oss://remotecom/ ... /model/model.ckpt'
    predict_result_path = 'oss://remotecom/ ... /prediction_txt_file.txt'

    net = SegNet(100, 0.0015, 0.99, 0.9999)
    # operation 1: train
    train_batch_size = 1
    net.train(train_batch_size, train_tf_path, model_save_path)

    # operation 2: prediction
    test_batch_size = 1
    net.prediction(test_batch_size, model_save_path, test_tf_path, predict_result_path)


# local run make the txt file for generate from the pai to tif file
def generate_tif_file_from_txt(geo_file=None):
    os.chdir('')  # 将其设置为当前工作目录
    txt_file_in = ''
    tif_file_out = ''
    txt_read = open(txt_file_in)
    txt_data = txt_read.read()
    im_arr = np.fromstring(txt_data, dtype='int32')
    im_arr = im_arr.reshape(4032, 15232)  # recurrent split large image
    im_arr1 = im_arr[0: 4000, 0: 15106]  # recurrent raw image

    if geo_file:
        im = gdal.Open(geo_file)
        writeTiff(im_arr1, 15106, 4000, 1, tif_file_out, [0, 12, 0, 0, 0, -12], im.GetProjection())
        #writeTiff(im_arr1, 15106, 4000, 1, tif_file_out, im.GetGeoTransform, im.GetProjection())
    else:
        write_tiff(tif_file_out, im_arr1, 15106, 4000, 1)


if __name__ == '__main__':
    # loacal run
    local_run()


    '''
    # run on pai
    operation_on_pai_generate_txt()
    # generate_tif_file_from_txt()
    '''




